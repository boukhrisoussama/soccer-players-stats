image: maven:3.8.3-openjdk-17
cache:
  key: maven-$CI_COMMIT_REF_SLUG
  paths:
    - .m2
    - target
  policy: pull-push
variables:
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
    -XX:+TieredCompilation
    -XX:TieredStopAtLevel=1
    -Djansi.force=true
    -Dfile.encoding=UTF-8
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    -DinstallAtEnd=true
    -DdeployAtEnd=true
    -Dstyle.color=always
  SONAR_USER_HOME: .m2/sonar

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - package
#  - deploy

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml


build-job:       # This job runs in the build stage, which runs first.
  stage: build
  cache:      # Cache downloaded dependencies and plugins between builds.
    key: "maven-$CI_COMMIT_REF_SLUG"  # The key here separates one cache per branch/tag ($CI_COMMIT_REF_SLUG)
    paths:
      - .m2/repository
  script:
    - mvn $MAVEN_CLI_OPTS package -DskipTests
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    paths:
      - "**/target"


unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - mvn $MAVEN_CLI_OPTS clean test

package-job:
  stage: package
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p --password-stdin "$CI_REGISTRY_PASSWORD"
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
#    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"

#deploy-job:
#  stage: deploy
#  before_script:
#    - chmod 400 $SSH_KEY
#  script:
#    - ssh -o StrictHostKeyChecking-no -i $SSH_KEY root@$HOST_IP_ADRESS "
#        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD &&
#        docker ps -aq | xargs docker stop | xargs docker rm &&
#        docker run -d -p 8080:8080 $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
