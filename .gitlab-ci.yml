image: maven:3.8.3-openjdk-17
cache:
  key: maven-$CI_COMMIT_REF_SLUG
  paths:
    - .m2
    - target
  policy: pull-push
variables:
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
    -XX:+TieredCompilation
    -XX:TieredStopAtLevel=1
    -Djansi.force=true
    -Dfile.encoding=UTF-8
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    -DinstallAtEnd=true
    -DdeployAtEnd=true
    -Dstyle.color=always
  SONAR_USER_HOME: .m2/sonar

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - package
  - deploy

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml


build-job:       # This job runs in the build stage, which runs first.
  stage: build
  cache:      # Cache downloaded dependencies and plugins between builds.
    key: "maven-$CI_COMMIT_REF_SLUG"  # The key here separates one cache per branch/tag ($CI_COMMIT_REF_SLUG)
    paths:
      - .m2/repository
  script:
    - mvn $MAVEN_CLI_OPTS compile
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    paths:
      - "**/target"


unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - mvn clean test

package-job:   # This job runs in the test stage.
  stage: package    # It only starts when the job in the build stage completes successfully.
  script:
    - mvn $MAVEN_CLI_OPTS package -DskipTests

deploy-job: # This job runs in the deploy stage.
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS package
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.example.com
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
